백준 24265 알고리즘의 수행 시간 4 
시간 복잡도 계산


1. 점화식을 세우기 위해 프로그램에 수들을 입력했다.

import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while(true){
          int n = sc.nextInt();
          long[] arr = new long[n];
          long count = 0;
          Long countAnswer = MenOfPassionCount(arr, n, count);
          System.out.println(countAnswer);
        }
    }
    static long MenOfPassionCount(long[] arr, int n, long count) {
        long sum = 0;
        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                sum = sum + arr[i] * arr[j];
                count++;
            }
        }
        return count;
    }
}

입력 n이 아래일 경우 출력 : 
1 -> 0
2 -> 1
3 -> 3
4 -> 6
5 -> 10
6 -> 15
7 -> 21
8 -> 28
9 -> 36
10 -> 45



2. 점화식 세우기
n이 홀수 : 0n, 1n, 2n, 3n ... 으로 출력된다.
n이 짝수 : 0n+1, 1n+2, 2n+3, 3n+4 ... 으로 출력된다.

3. 점화식 일반화 
n이 홀수 : n * (n-1)/2
n이 짝수 : ((n-2)n)/2 + (n/2)

최고차항은 항상 2이다.

4. 제출

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;
public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        long n = Long.parseLong(br.readLine());
        if (n % 2 == 1) {
            long count = n * ((n - 1) / 2);
            System.out.println(count);
            System.out.println(2);
        } else {
            long count = (n - 2) * n / 2 + (n / 2);
            System.out.println(count);
            System.out.println(2);
        }
    }
}


