
https://leetcode.com/problems/find-the-distance-value-between-two-arrays/description/

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));


        String[] input1 = br.readLine().split(" ");
        int[] arr1 = new int[input1.length];
        for (int i = 0; i < input1.length; i++) {
            arr1[i] = Integer.parseInt(input1[i]);
        }

        String[] input2 = br.readLine().split(" ");
        int[] arr2 = new int[input2.length];
        for (int i = 0; i < input2.length; i++) {
            arr2[i] = Integer.parseInt(input2[i]);
        }

        int d = Integer.parseInt(br.readLine());

        int output = 0;
        for(int i=0; i<arr1.length; i++){

            for(int j=0; j<arr2.length; j++){
                if(Math.abs(arr1[i] - arr2[j])<=d) break;
                if(j==arr2.length-1) output++;
            }
        }
        System.out.println(output);

    }
}



senior's solution
import java.util.Arrays;

public class Solution {
    public int findTheDistanceValue(int[] arr1, int[] arr2, int d) {
        Arrays.sort(arr2);
        int count = 0;

        for (int x : arr1) {
            int pos = Arrays.binarySearch(arr2, x - d);
            if (pos < 0) {
                pos = -(pos + 1); 
            }
            
            boolean isValid = true;

            if (pos < arr2.length && Math.abs(x - arr2[pos]) <= d) {
                isValid = false;
            }
            if (pos - 1 >= 0 && Math.abs(x - arr2[pos - 1]) <= d) {
                isValid = false;
            }

            if (isValid) {
                count++;
            }
        }
        return count;
    }
}
